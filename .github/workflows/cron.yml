name: Notificación de Sismos

on:
  schedule:
    - cron: "*/5 * * * *"  # Ejecutar cada 5 minutos

jobs:
  notificar:
    runs-on: ubuntu-latest

    steps:
      - name: Verificar repositorio
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Restaurar caché
        id: cache
        uses: actions/cache@v3
        with:
          path: .sismo_cache
          key: sismo-data-cache

      - name: Mostrar valor inicial de la caché
        run: |
          echo "Verificando contenido inicial de la caché..."
          if [ -f ".sismo_cache/last_sismo.txt" ]; then
            echo "Valor inicial del caché:"
            cat .sismo_cache/last_sismo.txt
          else
            echo "El archivo de caché .sismo_cache/last_sismo.txt no existe."
          fi

      - name: Configurar Firebase Admin
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_CREDENTIALS }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > firebase-service-account.json

      - name: Obtener datos de sismos
        id: fetch_sismo
        run: |
          mkdir -p .sismo_cache
          LAST_SISMO=""

          # Leer último valor de la caché si existe
          if [ -f ".sismo_cache/last_sismo.txt" ]; then
            LAST_SISMO=$(cat .sismo_cache/last_sismo.txt)
          fi
          echo "Último sismo desde la caché: $LAST_SISMO"

          # Obtener datos del endpoint
          NEW_SISMO=$(curl -s --fail https://reportsismo.vercel.app/api/sismo || echo "")
          echo "Nuevo sismo obtenido desde el endpoint: $NEW_SISMO"

          # Comparar valores y exportar resultado como variable de entorno
          if [ "$NEW_SISMO" != "$LAST_SISMO" ]; then
            echo "Los valores son diferentes: (Cache) $LAST_SISMO != (Response) $NEW_SISMO"
            echo "SISMO_RESPONSE=${NEW_SISMO}" >> $GITHUB_ENV
            echo "$NEW_SISMO" > .sismo_cache/last_sismo.txt  # Actualizar caché solo si son diferentes
          else
            echo "Los valores son iguales: (Cache) $LAST_SISMO == (Response) $NEW_SISMO"
            echo "CACHE_RESPONSE=${LAST_SISMO}" >> $GITHUB_ENV
          fi

      - name: Guardar caché
        if: env.SISMO_RESPONSE != ''  # Guardar solo si se actualizó la caché
        uses: actions/cache@v3
        with:
          path: .sismo_cache
          key: sismo-data-cache

      - name: Enviar notificaciones si son diferentes
        if: env.SISMO_RESPONSE != ''
        run: |
          echo "Enviando notificaciones con SISMO_RESPONSE: ${{ env.SISMO_RESPONSE }}"
          node sendNotifications.js
        env:
          SISMO_RESPONSE: ${{ env.SISMO_RESPONSE }}

      - name: Registrar si caché y respuesta son iguales
        if: env.CACHE_RESPONSE != ''
        run: |
          echo "La caché y el response son iguales: ${{ env.CACHE_RESPONSE }}"
