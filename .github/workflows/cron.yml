#name: Fetch Sismo Data with Cache

#on:
#  schedule:
#    - cron: "*/5 * * * *" # Ejecutar cada 5 minutos

#jobs:
#  fetch-data:
#    runs-on: ubuntu-latest

#    steps:
#      - name: Compute cache key
#        id: compute-key
#        run: |
          # Crear carpeta si no existe
#          mkdir -p sismo_cache

          # Generar un hash basado en un archivo existente o una constante
#          if [ -f sismo_cache/response.json ]; then
#            CACHE_KEY=$(cat sismo_cache/response.json | sha256sum | cut -d ' ' -f1)
#          else
#            CACHE_KEY=$(date +%s) # Usar timestamp si no hay datos previos
#          fi
#          echo "CACHE_KEY=sismo-response-cache-$CACHE_KEY" >> $GITHUB_ENV

#      - name: Setup cache
#        id: cache
#        uses: actions/cache@v3
#        with:
#          path: sismo_cache
#          key: ${{ env.CACHE_KEY }}
#          restore-keys: |
#            sismo-response-cache-

#      - name: Load previous response
#        run: |
          # Leer respuesta previa si existe
#          if [ -f sismo_cache/response.json ]; then
#            PREVIOUS_RESPONSE=$(cat sismo_cache/response.json)
#            echo "Previous Response: $PREVIOUS_RESPONSE"
#          else
#            echo "No previous response found."
#          fi

#      - name: Fetch new response
#        id: fetch
#        run: |
          # Realizar la peticiÃ³n
#          RESPONSE=$(curl -s https://reportsismo.vercel.app/api/sismo)
#          echo "New Response: $RESPONSE"

          # Guardar la respuesta en el cache
#          echo "$RESPONSE" > sismo_cache/response.json



#"success":true,"data":["14/12/2024","10:43:18","3.6","20 km al S de Provincia Constitucional del Callao 


name: Fetch sismo nuevo

on:
  schedule:
    - cron: "*/5 * * * *" # Ejecutar cada 5 minutos

jobs:
  fetch-data:
    runs-on: ubuntu-latest

    steps:
      - name: Set up environment
        run: mkdir -p sismo_cache

      - name: Compute cache key based on content
        id: compute-key
        run: |
          if [ -f sismo_cache/response.json ]; then
            CONTENT_HASH=$(sha256sum sismo_cache/response.json | cut -d ' ' -f1)
          else
            CONTENT_HASH="initial-cache"
          fi
          echo "CACHE_KEY=sismo-response-cache-${CONTENT_HASH}" >> $GITHUB_ENV

      - name: Restore cache
        id: cache
        uses: actions/cache@v3
        with:
          path: sismo_cache
          key: ${{ env.CACHE_KEY }}
          restore-keys: |
            sismo-response-cache-

      - name: Load previous response
        run: |
          if [ -f sismo_cache/response.json ]; then
            echo "Previous Response: $(cat sismo_cache/response.json)"
          else
            echo "No previous response found."
          fi

      - name: Fetch new response
        run: |
          RESPONSE=$(curl -s https://tcpdf.org/examples/example_067/)
          echo "New Response: $RESPONSE"
          echo "$RESPONSE" > sismo_cache/response.json

      - name: Save updated cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: sismo_cache
          key: ${{ env.CACHE_KEY }}
